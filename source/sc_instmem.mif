DEPTH = 1024;
WIDTH = 8;
ADDRESS_RADIX = HEX;
DATA_RADIX = HEX;
CONTENT
BEGIN
   0 : 08; -- main:  jy86 y86entry
   1 : 00;
   2 : 00;
   3 : e8;
   4 : 00;
   5 : 00;
   6 : 00;
   7 : 00;
   8 : 30; -- y86entry: irmovl Stack, %esp
   9 : f4;
   A : c8;
   B : 00;
   C : 00;
   D : 00;
   E : 20; --           rrmovl %esp, %ebp
   F : 45;
  10 : 80; --           call y86main
  11 : 1a;
  12 : 00;
  13 : 00;
  14 : 00;
  15 : 70; -- dead:     jmp dead
  16 : 15;
  17 : 00;
  18 : 00;
  19 : 00;
  1A : 30; -- y86main: irmovl SCREEN_X / 2, %eax
  1B : f0;
  1C : 90;
  1D : 01;
  1E : 00;
  1F : 00;
  20 : 30; --          irmovl SCREEN_Y / 2, %ebx
  21 : f3;
  22 : 2c;
  23 : 01;
  24 : 00;
  25 : 00;
  26 : 30; --          irmovl $-1, %ecx
  27 : f1;
  28 : ff;
  29 : ff;
  2A : ff;
  2B : ff;
  2C : 30; --          irmovl $-1, %edx
  2D : f2;
  2E : ff;
  2F : ff;
  30 : ff;
  31 : ff;
  32 : 80; --          call clean_screen
  33 : a4;
  34 : 02;
  35 : 00;
  36 : 00;
  37 : 80; --          call swap_buf
  38 : b9;
  39 : 01;
  3A : 00;
  3B : 00;
  3C : 80; --          call clean_screen
  3D : a4;
  3E : 02;
  3F : 00;
  40 : 00;
  41 : 80; -- loop:    call clean_ball
  42 : 4d;
  43 : 01;
  44 : 00;
  45 : 00;
  46 : a0; --          pushl %eax
  47 : 0f;
  48 : 20; --          rrmovl %esi, %eax
  49 : 60;
  4A : 80; --          call clean_pad
  4B : 1e;
  4C : 02;
  4D : 00;
  4E : 00;
  4F : b0; --          popl %eax
  50 : 0f;
  51 : e6; --          cmpi %eax, $0
  52 : 0f;
  53 : 00;
  54 : 00;
  55 : 00;
  56 : 00;
  57 : 73; --          je flip_dx
  58 : 6c;
  59 : 00;
  5A : 00;
  5B : 00;
  5C : e6; --          cmpi %eax, SCREEN_X
  5D : 0f;
  5E : 20;
  5F : 03;
  60 : 00;
  61 : 00;
  62 : 73; --          je flip_dx
  63 : 6c;
  64 : 00;
  65 : 00;
  66 : 00;
  67 : 70; --          jmp skip_dx
  68 : 72;
  69 : 00;
  6A : 00;
  6B : 00;
  6C : d1; -- flip_dx: isubl $0, %ecx
  6D : f1;
  6E : 00;
  6F : 00;
  70 : 00;
  71 : 00;
  72 : e6; --          cmpi %ebx, $0
  73 : 3f;
  74 : 00;
  75 : 00;
  76 : 00;
  77 : 00;
  78 : 73; --          je flip_dy
  79 : 82;
  7A : 00;
  7B : 00;
  7C : 00;
  7D : 70; --          jmp skip_dy
  7E : 88;
  7F : 00;
  80 : 00;
  81 : 00;
  82 : d1; -- flip_dy: isubl $0, %edx
  83 : f2;
  84 : 00;
  85 : 00;
  86 : 00;
  87 : 00;
  88 : e6; --          cmpi %ebx, PAD_Y - BALL_RADIUS
  89 : 3f;
  8A : 37;
  8B : 02;
  8C : 00;
  8D : 00;
  8E : 74; --          jne skip_check_pad
  8F : af;
  90 : 00;
  91 : 00;
  92 : 00;
  93 : 66; --          cmpl %eax, %esi
  94 : 06;
  95 : 72; --          jl skip_check_pad
  96 : af;
  97 : 00;
  98 : 00;
  99 : 00;
  9A : 20; --          rrmovl %esi, %edi
  9B : 67;
  9C : d0; --          iaddl PAD_LENGTH, %edi
  9D : f7;
  9E : 3c;
  9F : 00;
  A0 : 00;
  A1 : 00;
  A2 : 66; --          cmpl %eax, %edi
  A3 : 07;
  A4 : 76; --          jg skip_check_pad
  A5 : af;
  A6 : 00;
  A7 : 00;
  A8 : 00;
  A9 : d1; --          isubl $0, %edx
  AA : f2;
  AB : 00;
  AC : 00;
  AD : 00;
  AE : 00;
  AF : e6; --          cmpi %ebx, SCREEN_Y - BALL_RADIUS
  B0 : 3f;
  B1 : 55;
  B2 : 02;
  B3 : 00;
  B4 : 00;
  B5 : 74; --          jne skip_dead
  B6 : bf;
  B7 : 00;
  B8 : 00;
  B9 : 00;
  BA : 80; --          call gameover
  BB : 32;
  BC : 01;
  BD : 00;
  BE : 00;
  BF : 60; --          addl %ecx, %eax
  C0 : 10;
  C1 : 60; --          addl %edx, %ebx
  C2 : 23;
  C3 : 80; --          call draw_ball
  C4 : ca;
  C5 : 01;
  C6 : 00;
  C7 : 00;
  C8 : a0; --          pushl %eax
  C9 : 0f;
  CA : e6; --          cmpi %esi, SCREEN_X - PAD_LENGTH
  CB : 6f;
  CC : e4;
  CD : 02;
  CE : 00;
  CF : 00;
  D0 : 76; --          jg skip_move_pad_right
  D1 : f2;
  D2 : 00;
  D3 : 00;
  D4 : 00;
  D5 : 30; --          irmovl $0xf3000004, %edi
  D6 : f7;
  D7 : 04;
  D8 : 00;
  D9 : 00;
  DA : f3;
  DB : 50; --          mrmovl 0(%edi), %edi
  DC : 77;
  DD : 00;
  DE : 00;
  DF : 00;
  E0 : 00;
  E1 : e6; --          cmpi %edi, $1
  E2 : 7f;
  E3 : 01;
  E4 : 00;
  E5 : 00;
  E6 : 00;
  E7 : 73; --          je skip_move_pad_right
  E8 : f2;
  E9 : 00;
  EA : 00;
  EB : 00;
  EC : d0; --          iaddl PAD_SPEED, %esi
  ED : f6;
  EE : 02;
  EF : 00;
  F0 : 00;
  F1 : 00;
  F2 : e6; --          cmpi %esi, 0
  F3 : 6f;
  F4 : 00;
  F5 : 00;
  F6 : 00;
  F7 : 00;
  F8 : 71; --          jle skip_move_pad_left
  F9 : 1a;
  FA : 01;
  FB : 00;
  FC : 00;
  FD : 30; --          irmovl $0xf3000008, %edi
  FE : f7;
  FF : 08;
 100 : 00;
 101 : 00;
 102 : f3;
 103 : 50; --          mrmovl 0(%edi), %edi
 104 : 77;
 105 : 00;
 106 : 00;
 107 : 00;
 108 : 00;
 109 : e6; --          cmpi %edi, $1
 10A : 7f;
 10B : 01;
 10C : 00;
 10D : 00;
 10E : 00;
 10F : 73; --          je skip_move_pad_left
 110 : 1a;
 111 : 01;
 112 : 00;
 113 : 00;
 114 : d0; --          iaddl -PAD_SPEED, %esi
 115 : f6;
 116 : fe;
 117 : ff;
 118 : ff;
 119 : ff;
 11A : 20; --          rrmovl %esi, %eax
 11B : 60;
 11C : 80; --          call draw_pad
 11D : 64;
 11E : 02;
 11F : 00;
 120 : 00;
 121 : b0; --          popl %eax
 122 : 0f;
 123 : 80; --          call swap_buf
 124 : b9;
 125 : 01;
 126 : 00;
 127 : 00;
 128 : 80; --          call delay
 129 : 37;
 12A : 01;
 12B : 00;
 12C : 00;
 12D : 70; --          jmp loop
 12E : 41;
 12F : 00;
 130 : 00;
 131 : 00;
 132 : 70; -- gameover: jmp gameover
 133 : 32;
 134 : 01;
 135 : 00;
 136 : 00;
 137 : a0; -- delay:   pushl %eax
 138 : 0f;
 139 : 30; --          irmovl int(20000000/12*(1.0/SPEED)), %eax
 13A : f0;
 13B : 8d;
 13C : 20;
 13D : 00;
 13E : 00;
 13F : d0; -- delay_l: iaddl $-1, %eax
 140 : f0;
 141 : ff;
 142 : ff;
 143 : ff;
 144 : ff;
 145 : 74; --          jne delay_l
 146 : 3f;
 147 : 01;
 148 : 00;
 149 : 00;
 14A : b0; --          popl %eax
 14B : 0f;
 14C : 90; --          ret
 14D : a0; -- clean_ball: pushl %ecx
 14E : 1f;
 14F : a0; --             pushl %eax
 150 : 0f;
 151 : a0; --             pushl %ebx
 152 : 3f;
 153 : 30; --             irmovl $0, %ecx # get 0
 154 : f1;
 155 : 00;
 156 : 00;
 157 : 00;
 158 : 00;
 159 : e5; --             slli %ebx, $10
 15A : 3f;
 15B : 0a;
 15C : 00;
 15D : 00;
 15E : 00;
 15F : 64; --             orl %ebx, %eax # get base
 160 : 30;
 161 : d0; --             iaddl 1024*4, %eax # get end variable
 162 : f0;
 163 : 00;
 164 : 10;
 165 : 00;
 166 : 00;
 167 : 20; --             rrmovl %eax, %ebx
 168 : 03;
 169 : d0; --             iaddl -1024*9, %eax # set start variable
 16A : f0;
 16B : 00;
 16C : dc;
 16D : ff;
 16E : ff;
 16F : 40; -- clean_loop: rmmovl %ecx, (0xf4000000-4)(%eax)
 170 : 10;
 171 : fc;
 172 : ff;
 173 : ff;
 174 : f3;
 175 : 40; --             rmmovl %ecx, (0xf4000000-3)(%eax)
 176 : 10;
 177 : fd;
 178 : ff;
 179 : ff;
 17A : f3;
 17B : 40; --             rmmovl %ecx, (0xf4000000-2)(%eax)
 17C : 10;
 17D : fe;
 17E : ff;
 17F : ff;
 180 : f3;
 181 : 40; --             rmmovl %ecx, (0xf4000000-1)(%eax)
 182 : 10;
 183 : ff;
 184 : ff;
 185 : ff;
 186 : f3;
 187 : 40; --             rmmovl %ecx, (0xf4000000-0)(%eax)
 188 : 10;
 189 : 00;
 18A : 00;
 18B : 00;
 18C : f4;
 18D : 40; --             rmmovl %ecx, (0xf4000000+1)(%eax)
 18E : 10;
 18F : 01;
 190 : 00;
 191 : 00;
 192 : f4;
 193 : 40; --             rmmovl %ecx, (0xf4000000+2)(%eax)
 194 : 10;
 195 : 02;
 196 : 00;
 197 : 00;
 198 : f4;
 199 : 40; --             rmmovl %ecx, (0xf4000000+3)(%eax)
 19A : 10;
 19B : 03;
 19C : 00;
 19D : 00;
 19E : f4;
 19F : 40; --             rmmovl %ecx, (0xf4000000+4)(%eax) # clean a row
 1A0 : 10;
 1A1 : 04;
 1A2 : 00;
 1A3 : 00;
 1A4 : f4;
 1A5 : d0; --             iaddl $1024, %eax # move to next row
 1A6 : f0;
 1A7 : 00;
 1A8 : 04;
 1A9 : 00;
 1AA : 00;
 1AB : 66; --             cmpl %eax, %ebx # got end?
 1AC : 03;
 1AD : 74; --             jne clean_loop
 1AE : 6f;
 1AF : 01;
 1B0 : 00;
 1B1 : 00;
 1B2 : b0; --             popl %ebx
 1B3 : 3f;
 1B4 : b0; --             popl %eax
 1B5 : 0f;
 1B6 : b0; --             popl %ecx
 1B7 : 1f;
 1B8 : 90; --             ret
 1B9 : a0; -- swap_buf: pushl %eax
 1BA : 0f;
 1BB : 30; --           irmovl $0, %eax
 1BC : f0;
 1BD : 00;
 1BE : 00;
 1BF : 00;
 1C0 : 00;
 1C1 : 40; --           rmmovl %eax, 0xf4fffffc(%eax)
 1C2 : 00;
 1C3 : fc;
 1C4 : ff;
 1C5 : ff;
 1C6 : f4;
 1C7 : b0; --           popl %eax
 1C8 : 0f;
 1C9 : 90; --           ret
 1CA : a0; -- draw_ball: pushl %ecx
 1CB : 1f;
 1CC : a0; --            pushl %eax
 1CD : 0f;
 1CE : a0; --            pushl %ebx
 1CF : 3f;
 1D0 : 30; --            irmovl $1, %ecx # get 1
 1D1 : f1;
 1D2 : 01;
 1D3 : 00;
 1D4 : 00;
 1D5 : 00;
 1D6 : e5; --            slli %ebx, $10
 1D7 : 3f;
 1D8 : 0a;
 1D9 : 00;
 1DA : 00;
 1DB : 00;
 1DC : 64; --            orl %ebx, %eax # get base
 1DD : 30;
 1DE : d0; --            iaddl 1024*3, %eax # get end variable
 1DF : f0;
 1E0 : 00;
 1E1 : 0c;
 1E2 : 00;
 1E3 : 00;
 1E4 : 20; --            rrmovl %eax, %ebx
 1E5 : 03;
 1E6 : d0; --            iaddl -1024*5, %eax # set start variable
 1E7 : f0;
 1E8 : 00;
 1E9 : ec;
 1EA : ff;
 1EB : ff;
 1EC : 40; -- draw_loop: rmmovl %ecx, (0xf4000000-2)(%eax)
 1ED : 10;
 1EE : fe;
 1EF : ff;
 1F0 : ff;
 1F1 : f3;
 1F2 : 40; --            rmmovl %ecx, (0xf4000000-1)(%eax)
 1F3 : 10;
 1F4 : ff;
 1F5 : ff;
 1F6 : ff;
 1F7 : f3;
 1F8 : 40; --            rmmovl %ecx, (0xf4000000-0)(%eax)
 1F9 : 10;
 1FA : 00;
 1FB : 00;
 1FC : 00;
 1FD : f4;
 1FE : 40; --            rmmovl %ecx, (0xf4000000+1)(%eax)
 1FF : 10;
 200 : 01;
 201 : 00;
 202 : 00;
 203 : f4;
 204 : 40; --            rmmovl %ecx, (0xf4000000+2)(%eax) # draw a row
 205 : 10;
 206 : 02;
 207 : 00;
 208 : 00;
 209 : f4;
 20A : d0; --            iaddl $1024, %eax # move to next row
 20B : f0;
 20C : 00;
 20D : 04;
 20E : 00;
 20F : 00;
 210 : 66; --            cmpl %eax, %ebx # got end?
 211 : 03;
 212 : 74; --            jne draw_loop
 213 : ec;
 214 : 01;
 215 : 00;
 216 : 00;
 217 : b0; --            popl %ebx
 218 : 3f;
 219 : b0; --            popl %eax
 21A : 0f;
 21B : b0; --            popl %ecx
 21C : 1f;
 21D : 90; --            ret
 21E : a0; -- clean_pad:      pushl %ecx
 21F : 1f;
 220 : a0; --                 pushl %eax
 221 : 0f;
 222 : a0; --                 pushl %ebx
 223 : 3f;
 224 : 30; --                 irmovl $0, %ecx # get 0
 225 : f1;
 226 : 00;
 227 : 00;
 228 : 00;
 229 : 00;
 22A : d4; --                 iorl (PAD_Y << 10), %eax # get base
 22B : f0;
 22C : 00;
 22D : e8;
 22E : 08;
 22F : 00;
 230 : 20; --                 rrmovl %eax, %ebx
 231 : 03;
 232 : d0; --                 iaddl PAD_LENGTH+PAD_SPEED*2, %ebx # get end variable
 233 : f3;
 234 : 40;
 235 : 00;
 236 : 00;
 237 : 00;
 238 : d0; --                 iaddl -PAD_SPEED * 2, %eax
 239 : f0;
 23A : fc;
 23B : ff;
 23C : ff;
 23D : ff;
 23E : 40; -- clean_pad_loop: rmmovl %ecx, (0xf4000000+1024*0)(%eax)
 23F : 10;
 240 : 00;
 241 : 00;
 242 : 00;
 243 : f4;
 244 : 40; --                 rmmovl %ecx, (0xf4000000+1024*1)(%eax)
 245 : 10;
 246 : 00;
 247 : 04;
 248 : 00;
 249 : f4;
 24A : 40; --                 rmmovl %ecx, (0xf4000000+1024*2)(%eax)
 24B : 10;
 24C : 00;
 24D : 08;
 24E : 00;
 24F : f4;
 250 : d0; --                 iaddl $1, %eax
 251 : f0;
 252 : 01;
 253 : 00;
 254 : 00;
 255 : 00;
 256 : 66; --                 cmpl %eax, %ebx
 257 : 03;
 258 : 74; --                 jne clean_pad_loop
 259 : 3e;
 25A : 02;
 25B : 00;
 25C : 00;
 25D : b0; --                 popl %ebx
 25E : 3f;
 25F : b0; --                 popl %eax
 260 : 0f;
 261 : b0; --                 popl %ecx
 262 : 1f;
 263 : 90; --                 ret
 264 : a0; -- draw_pad:      pushl %ecx
 265 : 1f;
 266 : a0; --                pushl %eax
 267 : 0f;
 268 : a0; --                pushl %ebx
 269 : 3f;
 26A : 30; --                irmovl $1, %ecx # get 0
 26B : f1;
 26C : 01;
 26D : 00;
 26E : 00;
 26F : 00;
 270 : d4; --                iorl (PAD_Y << 10), %eax # get base
 271 : f0;
 272 : 00;
 273 : e8;
 274 : 08;
 275 : 00;
 276 : 20; --                rrmovl %eax, %ebx
 277 : 03;
 278 : d0; --                iaddl PAD_LENGTH, %ebx # get end variable
 279 : f3;
 27A : 3c;
 27B : 00;
 27C : 00;
 27D : 00;
 27E : 40; -- draw_pad_loop: rmmovl %ecx, (0xf4000000+1024*0)(%eax)
 27F : 10;
 280 : 00;
 281 : 00;
 282 : 00;
 283 : f4;
 284 : 40; --                rmmovl %ecx, (0xf4000000+1024*1)(%eax)
 285 : 10;
 286 : 00;
 287 : 04;
 288 : 00;
 289 : f4;
 28A : 40; --                rmmovl %ecx, (0xf4000000+1024*2)(%eax)
 28B : 10;
 28C : 00;
 28D : 08;
 28E : 00;
 28F : f4;
 290 : d0; --                iaddl $1, %eax
 291 : f0;
 292 : 01;
 293 : 00;
 294 : 00;
 295 : 00;
 296 : 66; --                cmpl %eax, %ebx
 297 : 03;
 298 : 74; --                jne draw_pad_loop
 299 : 7e;
 29A : 02;
 29B : 00;
 29C : 00;
 29D : b0; --                popl %ebx
 29E : 3f;
 29F : b0; --                popl %eax
 2A0 : 0f;
 2A1 : b0; --                popl %ecx
 2A2 : 1f;
 2A3 : 90; --                ret
 2A4 : a0; -- clean_screen:      pushl %eax
 2A5 : 0f;
 2A6 : a0; --                    pushl %ebx
 2A7 : 3f;
 2A8 : a0; --                    pushl %ecx
 2A9 : 1f;
 2AA : 30; --                    irmovl $0, %eax
 2AB : f0;
 2AC : 00;
 2AD : 00;
 2AE : 00;
 2AF : 00;
 2B0 : 30; --                    irmovl $0xf4000000, %ebx
 2B1 : f3;
 2B2 : 00;
 2B3 : 00;
 2B4 : 00;
 2B5 : f4;
 2B6 : 30; --                    irmovl 0xf4000000+1024*600, %ecx
 2B7 : f1;
 2B8 : 00;
 2B9 : 60;
 2BA : 09;
 2BB : f4;
 2BC : 40; -- clean_screen_loop: rmmovl %eax, 0(%ebx)
 2BD : 03;
 2BE : 00;
 2BF : 00;
 2C0 : 00;
 2C1 : 00;
 2C2 : d0; --                    iaddl $1, %ebx
 2C3 : f3;
 2C4 : 01;
 2C5 : 00;
 2C6 : 00;
 2C7 : 00;
 2C8 : 66; --                    cmpl %ebx, %ecx
 2C9 : 31;
 2CA : 74; --                    jne clean_screen_loop
 2CB : bc;
 2CC : 02;
 2CD : 00;
 2CE : 00;
 2CF : b0; --                    popl %ecx
 2D0 : 1f;
 2D1 : b0; --                    popl %ebx
 2D2 : 3f;
 2D3 : b0; --                    popl %eax
 2D4 : 0f;
 2D5 : 90; --                    ret
 2D6 : 00;
 2D7 : 00;
 2D8 : 00;
 2D9 : 00;
 2DA : 00;
 2DB : 00;
 2DC : 00;
 2DD : 00;
 2DE : 00;
 2DF : 00;
 2E0 : 00;
 2E1 : 00;
 2E2 : 00;
 2E3 : 00;
 2E4 : 00;
 2E5 : 00;
 2E6 : 00;
 2E7 : 00;
 2E8 : 00;
 2E9 : 00;
 2EA : 00;
 2EB : 00;
 2EC : 00;
 2ED : 00;
 2EE : 00;
 2EF : 00;
 2F0 : 00;
 2F1 : 00;
 2F2 : 00;
 2F3 : 00;
 2F4 : 00;
 2F5 : 00;
 2F6 : 00;
 2F7 : 00;
 2F8 : 00;
 2F9 : 00;
 2FA : 00;
 2FB : 00;
 2FC : 00;
 2FD : 00;
 2FE : 00;
 2FF : 00;
 300 : 00;
 301 : 00;
 302 : 00;
 303 : 00;
 304 : 00;
 305 : 00;
 306 : 00;
 307 : 00;
 308 : 00;
 309 : 00;
 30A : 00;
 30B : 00;
 30C : 00;
 30D : 00;
 30E : 00;
 30F : 00;
 310 : 00;
 311 : 00;
 312 : 00;
 313 : 00;
 314 : 00;
 315 : 00;
 316 : 00;
 317 : 00;
 318 : 00;
 319 : 00;
 31A : 00;
 31B : 00;
 31C : 00;
 31D : 00;
 31E : 00;
 31F : 00;
 320 : 00;
 321 : 00;
 322 : 00;
 323 : 00;
 324 : 00;
 325 : 00;
 326 : 00;
 327 : 00;
 328 : 00;
 329 : 00;
 32A : 00;
 32B : 00;
 32C : 00;
 32D : 00;
 32E : 00;
 32F : 00;
 330 : 00;
 331 : 00;
 332 : 00;
 333 : 00;
 334 : 00;
 335 : 00;
 336 : 00;
 337 : 00;
 338 : 00;
 339 : 00;
 33A : 00;
 33B : 00;
 33C : 00;
 33D : 00;
 33E : 00;
 33F : 00;
 340 : 00;
 341 : 00;
 342 : 00;
 343 : 00;
 344 : 00;
 345 : 00;
 346 : 00;
 347 : 00;
 348 : 00;
 349 : 00;
 34A : 00;
 34B : 00;
 34C : 00;
 34D : 00;
 34E : 00;
 34F : 00;
 350 : 00;
 351 : 00;
 352 : 00;
 353 : 00;
 354 : 00;
 355 : 00;
 356 : 00;
 357 : 00;
 358 : 00;
 359 : 00;
 35A : 00;
 35B : 00;
 35C : 00;
 35D : 00;
 35E : 00;
 35F : 00;
 360 : 00;
 361 : 00;
 362 : 00;
 363 : 00;
 364 : 00;
 365 : 00;
 366 : 00;
 367 : 00;
 368 : 00;
 369 : 00;
 36A : 00;
 36B : 00;
 36C : 00;
 36D : 00;
 36E : 00;
 36F : 00;
 370 : 00;
 371 : 00;
 372 : 00;
 373 : 00;
 374 : 00;
 375 : 00;
 376 : 00;
 377 : 00;
 378 : 00;
 379 : 00;
 37A : 00;
 37B : 00;
 37C : 00;
 37D : 00;
 37E : 00;
 37F : 00;
 380 : 00;
 381 : 00;
 382 : 00;
 383 : 00;
 384 : 00;
 385 : 00;
 386 : 00;
 387 : 00;
 388 : 00;
 389 : 00;
 38A : 00;
 38B : 00;
 38C : 00;
 38D : 00;
 38E : 00;
 38F : 00;
 390 : 00;
 391 : 00;
 392 : 00;
 393 : 00;
 394 : 00;
 395 : 00;
 396 : 00;
 397 : 00;
 398 : 00;
 399 : 00;
 39A : 00;
 39B : 00;
 39C : 00;
 39D : 00;
 39E : 00;
 39F : 00;
 3A0 : 00;
 3A1 : 00;
 3A2 : 00;
 3A3 : 00;
 3A4 : 00;
 3A5 : 00;
 3A6 : 00;
 3A7 : 00;
 3A8 : 00;
 3A9 : 00;
 3AA : 00;
 3AB : 00;
 3AC : 00;
 3AD : 00;
 3AE : 00;
 3AF : 00;
 3B0 : 00;
 3B1 : 00;
 3B2 : 00;
 3B3 : 00;
 3B4 : 00;
 3B5 : 00;
 3B6 : 00;
 3B7 : 00;
 3B8 : 00;
 3B9 : 00;
 3BA : 00;
 3BB : 00;
 3BC : 00;
 3BD : 00;
 3BE : 00;
 3BF : 00;
 3C0 : 00;
 3C1 : 00;
 3C2 : 00;
 3C3 : 00;
 3C4 : 00;
 3C5 : 00;
 3C6 : 00;
 3C7 : 00;
 3C8 : 00;
 3C9 : 00;
 3CA : 00;
 3CB : 00;
 3CC : 00;
 3CD : 00;
 3CE : 00;
 3CF : 00;
 3D0 : 00;
 3D1 : 00;
 3D2 : 00;
 3D3 : 00;
 3D4 : 00;
 3D5 : 00;
 3D6 : 00;
 3D7 : 00;
 3D8 : 00;
 3D9 : 00;
 3DA : 00;
 3DB : 00;
 3DC : 00;
 3DD : 00;
 3DE : 00;
 3DF : 00;
 3E0 : 00;
 3E1 : 00;
 3E2 : 00;
 3E3 : 00;
 3E4 : 00;
 3E5 : 00;
 3E6 : 00;
 3E7 : 00;
 3E8 : 00;
 3E9 : 00;
 3EA : 00;
 3EB : 00;
 3EC : 00;
 3ED : 00;
 3EE : 00;
 3EF : 00;
 3F0 : 00;
 3F1 : 00;
 3F2 : 00;
 3F3 : 00;
 3F4 : 00;
 3F5 : 00;
 3F6 : 00;
 3F7 : 00;
 3F8 : 00;
 3F9 : 00;
 3FA : 00;
 3FB : 00;
 3FC : 00;
 3FD : 00;
 3FE : 00;
 3FF : 00;
END;
